{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dyalog A modern, multi-paradigm application development platform with an APL language kernel. Who is it good for? Subject matter experts can write bespoke solutions in a short amount of time, without relying on boilerplate or external libraries. Concise code with high semantic density makes it quick and easy to adapt code to meet changing specifications. Create prototypes (or \"MVPs\" as the agilers call them) in a matter of hours that can take weeks or more in other languages. Quick and dirty examples See more on the APL Wiki . Monte carlo simulation Estimate Pi with 10,000 pairs of random numbers: {4\u00d7(+\u233f\u00f7\u2262)1>0.5*\u2368+/2*\u2368?\u2375 2\u23740 0}10000 3.1456 Regex like you've never seen Convert what you say into what your dog Rex hears: Rex \u2190 'rex' '\\w'\u2395R'\\0' '*'\u23601 Rex 'Rex, I told you not to do that! Now, Rex, go and wait outside' Rex, * **** *** *** ** ** ****! ***, Rex, ** *** **** ******* Swap two substrings: 'ab' 'ra'\u2395R'ra' 'ab'\u22a2'abracadabra' raabcadraab A powerful date time converter now \u2190 1613552859 \u235d Unix Timestamp \u235d 1200\u2336 is experimental 'Dddd Doo Mmmm YYYY hh:mm' (1200\u2336) 20 1 \u2395DT now \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502Wednesday 17th February 2021 09:07\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Dyalog"},{"location":"#dyalog","text":"A modern, multi-paradigm application development platform with an APL language kernel.","title":"Dyalog"},{"location":"#who-is-it-good-for","text":"Subject matter experts can write bespoke solutions in a short amount of time, without relying on boilerplate or external libraries. Concise code with high semantic density makes it quick and easy to adapt code to meet changing specifications. Create prototypes (or \"MVPs\" as the agilers call them) in a matter of hours that can take weeks or more in other languages.","title":"Who is it good for?"},{"location":"#quick-and-dirty-examples","text":"See more on the APL Wiki . Monte carlo simulation Estimate Pi with 10,000 pairs of random numbers: {4\u00d7(+\u233f\u00f7\u2262)1>0.5*\u2368+/2*\u2368?\u2375 2\u23740 0}10000 3.1456 Regex like you've never seen Convert what you say into what your dog Rex hears: Rex \u2190 'rex' '\\w'\u2395R'\\0' '*'\u23601 Rex 'Rex, I told you not to do that! Now, Rex, go and wait outside' Rex, * **** *** *** ** ** ****! ***, Rex, ** *** **** ******* Swap two substrings: 'ab' 'ra'\u2395R'ra' 'ab'\u22a2'abracadabra' raabcadraab A powerful date time converter now \u2190 1613552859 \u235d Unix Timestamp \u235d 1200\u2336 is experimental 'Dddd Doo Mmmm YYYY hh:mm' (1200\u2336) 20 1 \u2395DT now \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502Wednesday 17th February 2021 09:07\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Quick and dirty examples"},{"location":"quickstart/","text":"Quick Start This is a guide to getting started with the Dyalog Integrated Development Environments on supported platforms. For help with the APL language, see the APL Wiki page of learning resources . Installation Dyalog provides installation packages for popular operating systems. You can download them from the Dyalog website . Microsoft Windows Microsoft Windows installations come with the Dyalog Integrated Development Environment for Windows. The full Installation and Configuration Guide is available from the Dyalog website . macOS Installations on macOS come with the Remote Integrated Development Environment (RIDE) . The full Installation and Configuration Guide is available from the Dyalog website . Linux Linux installations do not come with the RIDE, but it can be downloaded from GitHub . Dyalog can be installed on Raspberry Pi using the apt package manager - details are on packages.dyalog.com . Typing APL Symbols Microsoft Windows If you select \"Install the Dyalog APL IME for 64 bit Windows\" during installation, you will have an additional keyboard input method with the ability to type APL symbols by holding the Ctrl key. In Windows 10, you can use \u229e Win + Space to choose between available keyboard layouts. Dyalog APL's standard US English layout is as follows: \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502~ \u233a \u2502! \u2336 \u2502@ \u236b \u2502# \u2352 \u2502$ \u234b \u2502% \u233d \u2502^ \u2349 \u2502& \u2296 \u2502* \u235f \u2502( \u2371 \u2502) \u2372 \u2502_ ! \u2502+ \u2339 \u2502Backspace\u2502 \u2502` \u22c4 \u25021 \u00a8 \u25022 \u00af \u25023 < \u25024 \u2264 \u25025 = \u25026 \u2265 \u25027 > \u25028 \u2260 \u25029 \u2228 \u25020 \u2227 \u2502- \u00d7 \u2502= \u00f7 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Tab \u2502Q \u2502W \u2502E \u2377 \u2502R \u2502T \u2368 \u2502Y \u2502U \u2502I \u2378 \u2502O \u2365 \u2502P \u2363 \u2502{ \u235e \u2502} \u236c \u2502| \u22a3 \u2502 \u2502 \u2502q ? \u2502w \u2375 \u2502e \u220a \u2502r \u2374 \u2502t ~ \u2502y \u2191 \u2502u \u2193 \u2502i \u2373 \u2502o \u25cb \u2502p * \u2502[ \u2190 \u2502] \u2192 \u2502\\ \u22a2 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Caps \u2502A \u2502S \u2502D \u2502F \u2502G \u2502H \u2502J \u2364 \u2502K \u2338 \u2502L \u2337 \u2502: \u2261 \u2502\" \u2262 \u2502Enter \u2502 \u2502Lock \u2502a \u237a \u2502s \u2308 \u2502d \u230a \u2502f _ \u2502g \u2207 \u2502h \u2206 \u2502j \u2218 \u2502k ' \u2502l \u2395 \u2502; \u234e \u2502' \u2355 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Shift \u2502Z \u2286 \u2502X \u2502C \u2502V \u2502B \u2502N \u2502M \u2502 < \u236a \u2502> \u2359 \u2502? \u2360 \u2502Shift \u2502 \u2502 \u2502z \u2282 \u2502x \u2283 \u2502c \u2229 \u2502v \u222a \u2502b \u22a5 \u2502n \u22a4 \u2502m | \u2502, \u235d \u2502. \u2340 \u2502/ \u233f \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Several international keyboard layouts exist with charts available from the dfns website . Linux (including Raspberry Pi) and macOS See the APL Wiki page on Typing Glyphs . Listing and Clearing Names In APL, arrays are the first class entities, but they are not the only things that can be named. In Dyalog there are many name classes , but in general we refer to any named entity as a name, and together the functions, variables, operators, namespaces, classes, instances etc. are just called names. You can clear the workspace using )CLEAR . An unsaved workspace will be lost, but a file system link will be broken such that the files are still in tact. Creating Functions and Operators With your cursor highlighting a name, press Shift + Enter to open the editor. While editing, you can use the forward-slash / on the numpad to automatically format your code. Tradfns Traditional functions and operators, called \"tradfns\" (trad-funs with a short \"u\" sound) and \"tradops\", have a header which follows a similar syntax to how they are called. result\u2190{left}Tradfn right \u235d Optional left argument denoted by {} :If 0=\u2395NC'left' result\u2190right :Else result\u2190left right :EndIf Dfns Dfns and dops use \u237a to refer to their left argument, and \u2375 to refer to their right argument. Dops use \u237a\u237a to refer to their left operand, and \u2375\u2375 to refer to their right operand. Dfn \u2190 { \u237a \u2190 'default' \u235d Assign \u237a to create a default left argument \u237a \u2375 } Tacit Tacit trains and derived functions do not explicitly refer to their arguments. However, they can still be assigned to names and used just like any other functions. Mean \u2190 +\u233f\u00f7\u2262 Saving Your Work Link The system called Link can be used to create a bi-directional link between the active workspace and a folder on the file system. In the session: ]LINK.Create # \\d\\tmp \u235d ]Create can be used as a shortcut Linked: # \u2190\u2192 C:\\d\\tmp Only names which are created in the editor are automatically updated on the file system. Any name can be added using ]LINK.Add , for example: MyDfn \u2190 {\u237a+\u2375} ]Add MyDfn Added: #.MyDfn With Link, any changes fixed using the editor will be reflected on the file system. You can also use a text editor to make changes, and those changes will be reflected in the workspace. Note: Link cannot save tacit functions. These must be wrapped inside dfns, tradfns or scripted namespaces to be used with Link. Save Without Closing By default, the only way to save changes made using the editor is to close the editor using the Esc key. However, you can set up a keyboard shortcut to save your changes without closing the editor. In the Microsoft Windows IDE, go to Options\u25b8Configure\u25b8Keyboard Shorcuts. In the RIDE, click the keyboard icon ( ) at the top-right of the language bar. Look (or search in the RIDE) for the code FX and set it to a shortcut of your choosing. Workspaces Link is the recommended method to keep work saved as text files, as it allows easy integration with version control software (e.g. Git, SVN). However, we continue to maintain and support binary .dws workspace files. In particular, these can still be useful for deploying your application as a single file. Binary .dws workspace files contain everything in your workspace - this includes all named entities e.g. variables, functions, classes and namespaces as well as system variable settings such as \u2395IO , \u2395ML and other quad names . To save your workspace, simply do: )SAVE /path/to/my/workspace.dws Loading your work again later is as simple as: )LOAD /path/to/my/workspace.dws Note: )LOAD -ing a workspace overwrites everything in the current workspace.","title":"Quick Start"},{"location":"quickstart/#quick-start","text":"This is a guide to getting started with the Dyalog Integrated Development Environments on supported platforms. For help with the APL language, see the APL Wiki page of learning resources .","title":"Quick Start"},{"location":"quickstart/#installation","text":"Dyalog provides installation packages for popular operating systems. You can download them from the Dyalog website .","title":"Installation"},{"location":"quickstart/#microsoft-windows","text":"Microsoft Windows installations come with the Dyalog Integrated Development Environment for Windows. The full Installation and Configuration Guide is available from the Dyalog website .","title":"Microsoft Windows"},{"location":"quickstart/#macos","text":"Installations on macOS come with the Remote Integrated Development Environment (RIDE) . The full Installation and Configuration Guide is available from the Dyalog website .","title":"macOS"},{"location":"quickstart/#linux","text":"Linux installations do not come with the RIDE, but it can be downloaded from GitHub . Dyalog can be installed on Raspberry Pi using the apt package manager - details are on packages.dyalog.com .","title":"Linux"},{"location":"quickstart/#typing-apl-symbols","text":"","title":"Typing APL Symbols"},{"location":"quickstart/#microsoft-windows_1","text":"If you select \"Install the Dyalog APL IME for 64 bit Windows\" during installation, you will have an additional keyboard input method with the ability to type APL symbols by holding the Ctrl key. In Windows 10, you can use \u229e Win + Space to choose between available keyboard layouts. Dyalog APL's standard US English layout is as follows: \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502~ \u233a \u2502! \u2336 \u2502@ \u236b \u2502# \u2352 \u2502$ \u234b \u2502% \u233d \u2502^ \u2349 \u2502& \u2296 \u2502* \u235f \u2502( \u2371 \u2502) \u2372 \u2502_ ! \u2502+ \u2339 \u2502Backspace\u2502 \u2502` \u22c4 \u25021 \u00a8 \u25022 \u00af \u25023 < \u25024 \u2264 \u25025 = \u25026 \u2265 \u25027 > \u25028 \u2260 \u25029 \u2228 \u25020 \u2227 \u2502- \u00d7 \u2502= \u00f7 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Tab \u2502Q \u2502W \u2502E \u2377 \u2502R \u2502T \u2368 \u2502Y \u2502U \u2502I \u2378 \u2502O \u2365 \u2502P \u2363 \u2502{ \u235e \u2502} \u236c \u2502| \u22a3 \u2502 \u2502 \u2502q ? \u2502w \u2375 \u2502e \u220a \u2502r \u2374 \u2502t ~ \u2502y \u2191 \u2502u \u2193 \u2502i \u2373 \u2502o \u25cb \u2502p * \u2502[ \u2190 \u2502] \u2192 \u2502\\ \u22a2 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Caps \u2502A \u2502S \u2502D \u2502F \u2502G \u2502H \u2502J \u2364 \u2502K \u2338 \u2502L \u2337 \u2502: \u2261 \u2502\" \u2262 \u2502Enter \u2502 \u2502Lock \u2502a \u237a \u2502s \u2308 \u2502d \u230a \u2502f _ \u2502g \u2207 \u2502h \u2206 \u2502j \u2218 \u2502k ' \u2502l \u2395 \u2502; \u234e \u2502' \u2355 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Shift \u2502Z \u2286 \u2502X \u2502C \u2502V \u2502B \u2502N \u2502M \u2502 < \u236a \u2502> \u2359 \u2502? \u2360 \u2502Shift \u2502 \u2502 \u2502z \u2282 \u2502x \u2283 \u2502c \u2229 \u2502v \u222a \u2502b \u22a5 \u2502n \u22a4 \u2502m | \u2502, \u235d \u2502. \u2340 \u2502/ \u233f \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Several international keyboard layouts exist with charts available from the dfns website .","title":"Microsoft Windows"},{"location":"quickstart/#linux-including-raspberry-pi-and-macos","text":"See the APL Wiki page on Typing Glyphs .","title":"Linux (including Raspberry Pi) and macOS"},{"location":"quickstart/#listing-and-clearing-names","text":"In APL, arrays are the first class entities, but they are not the only things that can be named. In Dyalog there are many name classes , but in general we refer to any named entity as a name, and together the functions, variables, operators, namespaces, classes, instances etc. are just called names. You can clear the workspace using )CLEAR . An unsaved workspace will be lost, but a file system link will be broken such that the files are still in tact.","title":"Listing and Clearing Names"},{"location":"quickstart/#creating-functions-and-operators","text":"With your cursor highlighting a name, press Shift + Enter to open the editor. While editing, you can use the forward-slash / on the numpad to automatically format your code.","title":"Creating Functions and Operators"},{"location":"quickstart/#tradfns","text":"Traditional functions and operators, called \"tradfns\" (trad-funs with a short \"u\" sound) and \"tradops\", have a header which follows a similar syntax to how they are called. result\u2190{left}Tradfn right \u235d Optional left argument denoted by {} :If 0=\u2395NC'left' result\u2190right :Else result\u2190left right :EndIf","title":"Tradfns"},{"location":"quickstart/#dfns","text":"Dfns and dops use \u237a to refer to their left argument, and \u2375 to refer to their right argument. Dops use \u237a\u237a to refer to their left operand, and \u2375\u2375 to refer to their right operand. Dfn \u2190 { \u237a \u2190 'default' \u235d Assign \u237a to create a default left argument \u237a \u2375 }","title":"Dfns"},{"location":"quickstart/#tacit","text":"Tacit trains and derived functions do not explicitly refer to their arguments. However, they can still be assigned to names and used just like any other functions. Mean \u2190 +\u233f\u00f7\u2262","title":"Tacit"},{"location":"quickstart/#saving-your-work","text":"","title":"Saving Your Work"},{"location":"quickstart/#link","text":"The system called Link can be used to create a bi-directional link between the active workspace and a folder on the file system. In the session: ]LINK.Create # \\d\\tmp \u235d ]Create can be used as a shortcut Linked: # \u2190\u2192 C:\\d\\tmp Only names which are created in the editor are automatically updated on the file system. Any name can be added using ]LINK.Add , for example: MyDfn \u2190 {\u237a+\u2375} ]Add MyDfn Added: #.MyDfn With Link, any changes fixed using the editor will be reflected on the file system. You can also use a text editor to make changes, and those changes will be reflected in the workspace. Note: Link cannot save tacit functions. These must be wrapped inside dfns, tradfns or scripted namespaces to be used with Link.","title":"Link"},{"location":"quickstart/#save-without-closing","text":"By default, the only way to save changes made using the editor is to close the editor using the Esc key. However, you can set up a keyboard shortcut to save your changes without closing the editor. In the Microsoft Windows IDE, go to Options\u25b8Configure\u25b8Keyboard Shorcuts. In the RIDE, click the keyboard icon ( ) at the top-right of the language bar. Look (or search in the RIDE) for the code FX and set it to a shortcut of your choosing.","title":"Save Without Closing"},{"location":"quickstart/#workspaces","text":"Link is the recommended method to keep work saved as text files, as it allows easy integration with version control software (e.g. Git, SVN). However, we continue to maintain and support binary .dws workspace files. In particular, these can still be useful for deploying your application as a single file. Binary .dws workspace files contain everything in your workspace - this includes all named entities e.g. variables, functions, classes and namespaces as well as system variable settings such as \u2395IO , \u2395ML and other quad names . To save your workspace, simply do: )SAVE /path/to/my/workspace.dws Loading your work again later is as simple as: )LOAD /path/to/my/workspace.dws Note: )LOAD -ing a workspace overwrites everything in the current workspace.","title":"Workspaces"},{"location":"tips/","text":"Tips Getting Help Place the cursor on a symbol or other built-in and press F1 to go straight to the help page for it. The ]Help user command will take you to the online documentation. Editing Try the F1 tip above for )ED to learn how to quickly create new items of various types. Use Shift + Enter to edit a name. )ED \"file:///path/file.ext\" lets you edit plain-text files, and upon closing, APL will ask you how to use the content. You can load APL functions/operators/objects from plain-text files with 2\u2395FIX'file:///path/file.ext' Saving Your Work ... and picking up from where you left off. If you enter )OFF then your session log is saved before APL closes, so you can simply scroll up when you're ready to continue. If you enter )CONTINUE then your workspace is saved with a temporary name and you can get it back with )LOAD CONTINUE Debugging and Meta Information Use Ctrl + Enter to trace into a function and execute it one line at a time. Use Shift + Enter with the cursor on white space to edit a suspended function. Get all the technical details of the last error or event with \u2395JSON\u2360'Compact'0\u22a2\u2395DMX . Shortcuts Use Ctrl + Shift + Backspace and Ctrl + Shift + Enter to scroll backward and forwards in your input history. They can also be used as Undo and Redo in the editor. Many built-in functionalities have neither menu items, nor keyboard shortcuts assigned by default. Go to\u2003Options\u2009\u25b8\u2009Configure\u2009\u25b8\u2009Keyboard Shortcuts\u2003in the IDE or click the keyboard icon ( ) in the RIDE to set up keyboard shortcuts. In the Windows IDE, you can use the copy and paste buttons on the Object (not Edit!) tool bar to copy and paste tables as matrices, documents as vectors of character vectors, and images as bitmap objects. User commands (e.g. ]Help ) and system commands (e.g. )SAVE ) are case-insensitive. Display Forms Turn boxing on to make the display of nested arrays more clear: ]Box on Was OFF \u23732 3 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u25021 1\u25021 2\u25021 3\u2502 \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524 \u25022 1\u25022 2\u25022 3\u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 With the trains modifier, you can display function trains with a tree structure: ]Box -trains=tree Was -trains=box +\u233f\u00f7\u2262 \u250c\u2500\u253c\u2500\u2510 \u233f \u00f7 \u2262 \u250c\u2500\u2518 + With the fns modifier, nested arrays will have boxed display even if they are printed to the session from within functions. PrintShape\u2190{\u2374\u2395\u2190\u2375} PrintShape \u23731 3 1 1 1 2 1 3 1 3 ]Box -fns=on Was -fns=off PrintShape \u23731 3 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u25021 1\u25021 2\u25021 3\u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 1 3 With the style modifier you can get a more verbose view including hints for axes and data types. ]Box -style=max \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502Was -style=min\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2282'APL' \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2192\u2500\u2500\u2510 \u2502 \u2502 \u2502APL\u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2518 \u2502 \u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2518 See all the options with ]Box -?? ]Rows on -fold=3 will let you scroll horizontally and trim large outputs so they don't flood your screen vertically. The above settings can be made permanent by saving your session:\u2003Session\u2009\u25b8\u2009Save\u2003in the Microsoft Windows IDE or 2\u2395NQ\u2395SE'FileWrite' Quick Utilities ]Map displays the content and structure of your workspace. ]Plot data will draw simple graphs of your data. See ]Plot -?? for details. ]Open filename opens a file in its default application. ]CD dir lets you change directory from inside APL. In general, help for user commands can be found with ]Command -? Use \u2395SE.Dyalog.Utils.repObj myArray to generate an expression for (almost) any given array. Use the workspace explorer to see a tree view of your workspace. In the Windows IDE go to\u2003Tools\u2009\u25b8\u2009Explorer\u2026\u2003and in the RIDE go to\u2003View\u2009\u25b8\u2009Show Workspace Explorer. More Tips APL has a thriving and enthusiastic community of users who are very happy to answer questions: Chat in the APL Orchard , a very active chat room Ask a question on Stack Overflow or the r/apljk subreddit Post in the Dyalog Forums Dyalog social media: Twitter, Facebook, LinkedIn Visit to chat with friendly APLers and get more tips.","title":"Tips"},{"location":"tips/#tips","text":"","title":"Tips"},{"location":"tips/#getting-help","text":"Place the cursor on a symbol or other built-in and press F1 to go straight to the help page for it. The ]Help user command will take you to the online documentation.","title":"Getting Help"},{"location":"tips/#editing","text":"Try the F1 tip above for )ED to learn how to quickly create new items of various types. Use Shift + Enter to edit a name. )ED \"file:///path/file.ext\" lets you edit plain-text files, and upon closing, APL will ask you how to use the content. You can load APL functions/operators/objects from plain-text files with 2\u2395FIX'file:///path/file.ext'","title":"Editing"},{"location":"tips/#saving-your-work","text":"... and picking up from where you left off. If you enter )OFF then your session log is saved before APL closes, so you can simply scroll up when you're ready to continue. If you enter )CONTINUE then your workspace is saved with a temporary name and you can get it back with )LOAD CONTINUE","title":"Saving Your Work"},{"location":"tips/#debugging-and-meta-information","text":"Use Ctrl + Enter to trace into a function and execute it one line at a time. Use Shift + Enter with the cursor on white space to edit a suspended function. Get all the technical details of the last error or event with \u2395JSON\u2360'Compact'0\u22a2\u2395DMX .","title":"Debugging and Meta Information"},{"location":"tips/#shortcuts","text":"Use Ctrl + Shift + Backspace and Ctrl + Shift + Enter to scroll backward and forwards in your input history. They can also be used as Undo and Redo in the editor. Many built-in functionalities have neither menu items, nor keyboard shortcuts assigned by default. Go to\u2003Options\u2009\u25b8\u2009Configure\u2009\u25b8\u2009Keyboard Shortcuts\u2003in the IDE or click the keyboard icon ( ) in the RIDE to set up keyboard shortcuts. In the Windows IDE, you can use the copy and paste buttons on the Object (not Edit!) tool bar to copy and paste tables as matrices, documents as vectors of character vectors, and images as bitmap objects. User commands (e.g. ]Help ) and system commands (e.g. )SAVE ) are case-insensitive.","title":"Shortcuts"},{"location":"tips/#display-forms","text":"Turn boxing on to make the display of nested arrays more clear: ]Box on Was OFF \u23732 3 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u25021 1\u25021 2\u25021 3\u2502 \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524 \u25022 1\u25022 2\u25022 3\u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 With the trains modifier, you can display function trains with a tree structure: ]Box -trains=tree Was -trains=box +\u233f\u00f7\u2262 \u250c\u2500\u253c\u2500\u2510 \u233f \u00f7 \u2262 \u250c\u2500\u2518 + With the fns modifier, nested arrays will have boxed display even if they are printed to the session from within functions. PrintShape\u2190{\u2374\u2395\u2190\u2375} PrintShape \u23731 3 1 1 1 2 1 3 1 3 ]Box -fns=on Was -fns=off PrintShape \u23731 3 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u25021 1\u25021 2\u25021 3\u2502 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 1 3 With the style modifier you can get a more verbose view including hints for axes and data types. ]Box -style=max \u250c\u2192\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502Was -style=min\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2282'APL' \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u250c\u2192\u2500\u2500\u2510 \u2502 \u2502 \u2502APL\u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2518 \u2502 \u2514\u220a\u2500\u2500\u2500\u2500\u2500\u2500\u2518 See all the options with ]Box -?? ]Rows on -fold=3 will let you scroll horizontally and trim large outputs so they don't flood your screen vertically. The above settings can be made permanent by saving your session:\u2003Session\u2009\u25b8\u2009Save\u2003in the Microsoft Windows IDE or 2\u2395NQ\u2395SE'FileWrite'","title":"Display Forms"},{"location":"tips/#quick-utilities","text":"]Map displays the content and structure of your workspace. ]Plot data will draw simple graphs of your data. See ]Plot -?? for details. ]Open filename opens a file in its default application. ]CD dir lets you change directory from inside APL. In general, help for user commands can be found with ]Command -? Use \u2395SE.Dyalog.Utils.repObj myArray to generate an expression for (almost) any given array. Use the workspace explorer to see a tree view of your workspace. In the Windows IDE go to\u2003Tools\u2009\u25b8\u2009Explorer\u2026\u2003and in the RIDE go to\u2003View\u2009\u25b8\u2009Show Workspace Explorer.","title":"Quick Utilities"},{"location":"tips/#more-tips","text":"APL has a thriving and enthusiastic community of users who are very happy to answer questions: Chat in the APL Orchard , a very active chat room Ask a question on Stack Overflow or the r/apljk subreddit Post in the Dyalog Forums Dyalog social media: Twitter, Facebook, LinkedIn Visit to chat with friendly APLers and get more tips.","title":"More Tips"}]}