{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"development-environment/","text":"Development Environment This is a guide to getting started with the Dyalog Integrated Development Environments on supported platforms. For help with the APL language, see our language guide . Dyalog provides two integrated development environments (IDEs). There is the Dyalog IDE for Microsoft Windows, and the Remote IDE or (RIDE) for use on Linux and macOS. As the name suggests, the RIDE also provides remote interaction and debugging capabilities over a network. Note The RIDE must be installed separately on Linux. For more information, see the Dyalog for UNIX Installation and Configuration Guide . This page talks about parts of the development environment common to both IDEs. While you do not need to know all of this to get started using APL to solve problems, it is useful to understand the terminology when you want to develop applications, ask for help or report issues. Basic layout The basic layouts for both standard development environments are described in section 2.2 of Mastering Dyalog APL . The active workspace This is the currently running collection of names. That is, functions, operators, objects and variables which are accessible to the currently running application. List names in the active workspace: var \u2190 1 2 3 Sum \u2190 { + / \u2375 } ] names Sum var Use the workspace explorer to view names in the active workspace (including the session object ). The session This can refer to the session log , the session object and the session file . Sometimes, the term is used to mean executing code directly in the REPL , in contrast to the phrase \" under program control \". Something under program control is a line in a function which is run when that function is run. For example, you can use user commands in the session, but not under program control. The session log This is a record of everything you have typed into the session and output from those expressions. You can save this log as a .dlf file using Log \u2192 Save As on Windows. Log files with the extension .dlf can only be opened in Dyalog. To save the log as plain text, on any platform, use the following expression obtained from APLcart : { \u2375 \u2395NPUT \u2368 \u2282 \u2395SE\u2395WG 'Log' } '/path/to/file.dlf' The log file is updated when Dyalog closes. Delete the log file before opening Dyalog to start with a clean log file. TODO: can .dlf be saved from APL? in RIDE? The session object The session object ( documentation ), or session namespace , is a special system object called \u2395SE which is accessible from APL. It contains all of your settings for things like ]boxing and print width ( \u2395PW ) , as well as window and toolbar settings in the Windows IDE. The session file This is a file with the extension .dse . It contains the value of a session object . You can use multiple session files to save separate configurations of your development environment. The current session file location is the value of the Session_File configuration parameter . ] config Session_File Session_File C : \\ Users \\ Dyalog \\ Documents \\ Dyalog APL - 64 18.2 Unicode Files \\ def_uk . dse On Windows, you can overwrite the current session file with Session \u2192 Save in the menu. On any platform, the following expression can be used to save the current session configuration to a new file: { 2 \u2395NQ\u2395SE 'FileWrite' \u22a3 \u2395SE\u2395WS 'File' \u2375 } '/path/to/file.dse' On Windows, go to Options \u2192 Configure to set the session file in the Session tab. On Linux and macOS, set the Session_File configuration parameter. See the documentation for how to use configuration parameters . TODO: are ALLCAPS config params safer cross platform than otherwise? The workspace explorer This tool provides an overview of all of the names in your active workspace. In the Windows IDE, go to Tools \u2192 Explorer . In the RIDE, go to View \u2192 Show Workspace Explorer .","title":"Development Environment"},{"location":"development-environment/#development-environment","text":"This is a guide to getting started with the Dyalog Integrated Development Environments on supported platforms. For help with the APL language, see our language guide . Dyalog provides two integrated development environments (IDEs). There is the Dyalog IDE for Microsoft Windows, and the Remote IDE or (RIDE) for use on Linux and macOS. As the name suggests, the RIDE also provides remote interaction and debugging capabilities over a network. Note The RIDE must be installed separately on Linux. For more information, see the Dyalog for UNIX Installation and Configuration Guide . This page talks about parts of the development environment common to both IDEs. While you do not need to know all of this to get started using APL to solve problems, it is useful to understand the terminology when you want to develop applications, ask for help or report issues.","title":"Development Environment"},{"location":"development-environment/#basic-layout","text":"The basic layouts for both standard development environments are described in section 2.2 of Mastering Dyalog APL .","title":"Basic layout"},{"location":"development-environment/#the-active-workspace","text":"This is the currently running collection of names. That is, functions, operators, objects and variables which are accessible to the currently running application. List names in the active workspace: var \u2190 1 2 3 Sum \u2190 { + / \u2375 } ] names Sum var Use the workspace explorer to view names in the active workspace (including the session object ).","title":"The active workspace"},{"location":"development-environment/#the-session","text":"This can refer to the session log , the session object and the session file . Sometimes, the term is used to mean executing code directly in the REPL , in contrast to the phrase \" under program control \". Something under program control is a line in a function which is run when that function is run. For example, you can use user commands in the session, but not under program control.","title":"The session"},{"location":"development-environment/#the-session-log","text":"This is a record of everything you have typed into the session and output from those expressions. You can save this log as a .dlf file using Log \u2192 Save As on Windows. Log files with the extension .dlf can only be opened in Dyalog. To save the log as plain text, on any platform, use the following expression obtained from APLcart : { \u2375 \u2395NPUT \u2368 \u2282 \u2395SE\u2395WG 'Log' } '/path/to/file.dlf' The log file is updated when Dyalog closes. Delete the log file before opening Dyalog to start with a clean log file. TODO: can .dlf be saved from APL? in RIDE?","title":"The session log"},{"location":"development-environment/#the-session-object","text":"The session object ( documentation ), or session namespace , is a special system object called \u2395SE which is accessible from APL. It contains all of your settings for things like ]boxing and print width ( \u2395PW ) , as well as window and toolbar settings in the Windows IDE.","title":"The session object"},{"location":"development-environment/#the-session-file","text":"This is a file with the extension .dse . It contains the value of a session object . You can use multiple session files to save separate configurations of your development environment. The current session file location is the value of the Session_File configuration parameter . ] config Session_File Session_File C : \\ Users \\ Dyalog \\ Documents \\ Dyalog APL - 64 18.2 Unicode Files \\ def_uk . dse On Windows, you can overwrite the current session file with Session \u2192 Save in the menu. On any platform, the following expression can be used to save the current session configuration to a new file: { 2 \u2395NQ\u2395SE 'FileWrite' \u22a3 \u2395SE\u2395WS 'File' \u2375 } '/path/to/file.dse' On Windows, go to Options \u2192 Configure to set the session file in the Session tab. On Linux and macOS, set the Session_File configuration parameter. See the documentation for how to use configuration parameters . TODO: are ALLCAPS config params safer cross platform than otherwise?","title":"The session file"},{"location":"development-environment/#the-workspace-explorer","text":"This tool provides an overview of all of the names in your active workspace. In the Windows IDE, go to Tools \u2192 Explorer . In the RIDE, go to View \u2192 Show Workspace Explorer .","title":"The workspace explorer"},{"location":"development-environment/install/","text":"Installation Dyalog provides installation packages for popular operating systems which can be downloaded for free . Microsoft Windows This is a quick overview of the installation process. For more information about installed components, registry entries and configuration etc., see the Dyalog for Microsoft Windows Installation and Configuration Guide . Download Dyalog and Begin Installation Go to the download page and download the installation package windows_64_<version>_unicode.zip . Unzip the installation package and double click on setup.exe . Restart the installer with administrator privileges . Choose your APL keyboard. Untick the Dyalog APL IME for 64 bit Windows checkbox unless you want the default Dyalog keyboard layout. By default, Dyalog's Input Method Editor (IME) uses Ctrl to enter APL symbols. It does not prevent copy and paste shortcuts, but some prefer to use a different method. If you would like an alternative input method (such as using the AltGr key, backtick ` prefix or composition input ( = / Tab gives \u2260 on tryapl ), see section 2.2.5 of Mastering Dyalog APL . Note Once Dyalog is installed, you use \u229e Win + Spacebar to cycle between available keyboard layouts. Finish Installation Click on Default Install . Reboot your PC. macOS This is a quick overview of the installation process. For more information, see the Dyalog for macOS Installation and Configuration Guide . Download and Install Dyalog Go to the download page and download the installation package for macOS. Double click on the mac_64_<version>_unicode.pkg file. Follow the instructions in the Dyalog Installer window. Close the Dyalog Installer window. Dyalog should now be installed in your Applications folder. Choose your APL keyboard. Keyboard layouts and fonts for macOS are described on the dfns website . Linux This is a quick overview of the installation process. For more information, see the Dyalog for UNIX Installation and Configuration Guide . Download and Install Dyalog Installation .rpm and .deb files are provided from the Dyalog website . Use your distribution's package manager to install Dyalog. Usually, you can install from the terminal: sudo rpm -i linux_64_<version>_unicode.x86_64.rpm sudo dpkg -i linux_64_<version>_unicode.x86_64.deb Choose your APL keyboard By default, Dyalog uses the Meta (\"Windows\" \u229e Win ) key for entering APL symbols on Linux. Dyalog will override XKB configuration at startup by default. You can prevent this with a startup option. dyalog -nokbd APL keyboard layouts come with most Linux distributions by default, but must be enabled. Follow the instructions on the APL Wiki for your desktop environment. Install the RIDE While Dyalog does come with a bare-bones terminal interface, it is recommended to use the Remote IDE . Download the latest release from GitHub and install it as above. Create an APL session startup script By default, users must \"start\" an APL session from the main RIDE configuration window as described in section 2.1.1 of Mastering Dyalog APL . The following script can be used to launch RIDE and immediately connect to a new Dyalog instance. #!/usr/bin/env sh env RIDE_CONNECT=localhost:4502 ride & dyalog +s -q RIDE_INIT=SERVE:*:4502 To prevent Dyalog taking over the keyboard layout at startup, add -nokbd to the 3rd line in the script. Dyalog installation directory The main Dyalog installation directory is returned by the expression: \u2395 \u2190 2 \u2395NQ # 'GetEnvironment' 'DYALOG' C : \\ Program Files \\ Dyalog \\ Dyalog APL - 64 18.2 Unicode","title":"Installation"},{"location":"development-environment/install/#installation","text":"Dyalog provides installation packages for popular operating systems which can be downloaded for free .","title":"Installation"},{"location":"development-environment/install/#microsoft-windows","text":"This is a quick overview of the installation process. For more information about installed components, registry entries and configuration etc., see the Dyalog for Microsoft Windows Installation and Configuration Guide .","title":"Microsoft Windows"},{"location":"development-environment/install/#download-dyalog-and-begin-installation","text":"Go to the download page and download the installation package windows_64_<version>_unicode.zip . Unzip the installation package and double click on setup.exe . Restart the installer with administrator privileges .","title":"Download Dyalog and Begin Installation"},{"location":"development-environment/install/#choose-your-apl-keyboard","text":"Untick the Dyalog APL IME for 64 bit Windows checkbox unless you want the default Dyalog keyboard layout. By default, Dyalog's Input Method Editor (IME) uses Ctrl to enter APL symbols. It does not prevent copy and paste shortcuts, but some prefer to use a different method. If you would like an alternative input method (such as using the AltGr key, backtick ` prefix or composition input ( = / Tab gives \u2260 on tryapl ), see section 2.2.5 of Mastering Dyalog APL . Note Once Dyalog is installed, you use \u229e Win + Spacebar to cycle between available keyboard layouts.","title":"Choose your APL keyboard."},{"location":"development-environment/install/#finish-installation","text":"Click on Default Install . Reboot your PC.","title":"Finish Installation"},{"location":"development-environment/install/#macos","text":"This is a quick overview of the installation process. For more information, see the Dyalog for macOS Installation and Configuration Guide .","title":"macOS"},{"location":"development-environment/install/#download-and-install-dyalog","text":"Go to the download page and download the installation package for macOS. Double click on the mac_64_<version>_unicode.pkg file. Follow the instructions in the Dyalog Installer window. Close the Dyalog Installer window. Dyalog should now be installed in your Applications folder.","title":"Download and Install Dyalog"},{"location":"development-environment/install/#choose-your-apl-keyboard_1","text":"Keyboard layouts and fonts for macOS are described on the dfns website .","title":"Choose your APL keyboard."},{"location":"development-environment/install/#linux","text":"This is a quick overview of the installation process. For more information, see the Dyalog for UNIX Installation and Configuration Guide .","title":"Linux"},{"location":"development-environment/install/#download-and-install-dyalog_1","text":"Installation .rpm and .deb files are provided from the Dyalog website . Use your distribution's package manager to install Dyalog. Usually, you can install from the terminal: sudo rpm -i linux_64_<version>_unicode.x86_64.rpm sudo dpkg -i linux_64_<version>_unicode.x86_64.deb","title":"Download and Install Dyalog"},{"location":"development-environment/install/#choose-your-apl-keyboard_2","text":"By default, Dyalog uses the Meta (\"Windows\" \u229e Win ) key for entering APL symbols on Linux. Dyalog will override XKB configuration at startup by default. You can prevent this with a startup option. dyalog -nokbd APL keyboard layouts come with most Linux distributions by default, but must be enabled. Follow the instructions on the APL Wiki for your desktop environment.","title":"Choose your APL keyboard"},{"location":"development-environment/install/#install-the-ride","text":"While Dyalog does come with a bare-bones terminal interface, it is recommended to use the Remote IDE . Download the latest release from GitHub and install it as above.","title":"Install the RIDE"},{"location":"development-environment/install/#create-an-apl-session-startup-script","text":"By default, users must \"start\" an APL session from the main RIDE configuration window as described in section 2.1.1 of Mastering Dyalog APL . The following script can be used to launch RIDE and immediately connect to a new Dyalog instance. #!/usr/bin/env sh env RIDE_CONNECT=localhost:4502 ride & dyalog +s -q RIDE_INIT=SERVE:*:4502 To prevent Dyalog taking over the keyboard layout at startup, add -nokbd to the 3rd line in the script.","title":"Create an APL session startup script"},{"location":"development-environment/install/#dyalog-installation-directory","text":"The main Dyalog installation directory is returned by the expression: \u2395 \u2190 2 \u2395NQ # 'GetEnvironment' 'DYALOG' C : \\ Program Files \\ Dyalog \\ Dyalog APL - 64 18.2 Unicode","title":"Dyalog installation directory"},{"location":"development-environment/typing/","text":"Typing APL Symbols Dyalog APL's standard US English layout is as follows: \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502~ \u233a \u2502! \u2336 \u2502@ \u236b \u2502# \u2352 \u2502$ \u234b \u2502% \u233d \u2502^ \u2349 \u2502& \u2296 \u2502* \u235f \u2502( \u2371 \u2502) \u2372 \u2502_ ! \u2502+ \u2339 \u2502Backspace\u2502 \u2502` \u22c4 \u25021 \u00a8 \u25022 \u00af \u25023 < \u25024 \u2264 \u25025 = \u25026 \u2265 \u25027 > \u25028 \u2260 \u25029 \u2228 \u25020 \u2227 \u2502- \u00d7 \u2502= \u00f7 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Tab \u2502Q \u2502W \u2502E \u2377 \u2502R \u2502T \u2368 \u2502Y \u2502U \u2502I \u2378 \u2502O \u2365 \u2502P \u2363 \u2502{ \u235e \u2502} \u236c \u2502| \u22a3 \u2502 \u2502 \u2502q ? \u2502w \u2375 \u2502e \u220a \u2502r \u2374 \u2502t ~ \u2502y \u2191 \u2502u \u2193 \u2502i \u2373 \u2502o \u25cb \u2502p * \u2502[ \u2190 \u2502] \u2192 \u2502\\ \u22a2 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Caps \u2502A \u2502S \u2502D \u2502F \u2502G \u2502H \u2502J \u2364 \u2502K \u2338 \u2502L \u2337 \u2502: \u2261 \u2502\" \u2262 \u2502Enter \u2502 \u2502Lock \u2502a \u237a \u2502s \u2308 \u2502d \u230a \u2502f _ \u2502g \u2207 \u2502h \u2206 \u2502j \u2218 \u2502k ' \u2502l \u2395 \u2502; \u234e \u2502' \u2355 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Shift \u2502Z \u2286 \u2502X \u2502C \u2502V \u2502B \u2502N \u2502M \u2502 < \u236a \u2502> \u2359 \u2502? \u2360 \u2502Shift \u2502 \u2502 \u2502z \u2282 \u2502x \u2283 \u2502c \u2229 \u2502v \u222a \u2502b \u22a5 \u2502n \u22a4 \u2502m | \u2502, \u235d \u2502. \u2340 \u2502/ \u233f \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Several international keyboard layouts exist with charts available from the dfns website . Microsoft Windows If you select \"Install the Dyalog APL IME for 64 bit Windows\" during installation, you will have an additional keyboard input method with the ability to type APL symbols by holding the Ctrl key. In Windows 10, you can use \u229e Win + Space to choose between available keyboard layouts. Linux (including Raspberry Pi) and macOS See the APL Wiki page about Typing Glyphs on Linux . macOS See the APL Wiki section about Typing Glyphs on macOS .","title":"Typing APL Symbols"},{"location":"development-environment/typing/#typing-apl-symbols","text":"Dyalog APL's standard US English layout is as follows: \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502~ \u233a \u2502! \u2336 \u2502@ \u236b \u2502# \u2352 \u2502$ \u234b \u2502% \u233d \u2502^ \u2349 \u2502& \u2296 \u2502* \u235f \u2502( \u2371 \u2502) \u2372 \u2502_ ! \u2502+ \u2339 \u2502Backspace\u2502 \u2502` \u22c4 \u25021 \u00a8 \u25022 \u00af \u25023 < \u25024 \u2264 \u25025 = \u25026 \u2265 \u25027 > \u25028 \u2260 \u25029 \u2228 \u25020 \u2227 \u2502- \u00d7 \u2502= \u00f7 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Tab \u2502Q \u2502W \u2502E \u2377 \u2502R \u2502T \u2368 \u2502Y \u2502U \u2502I \u2378 \u2502O \u2365 \u2502P \u2363 \u2502{ \u235e \u2502} \u236c \u2502| \u22a3 \u2502 \u2502 \u2502q ? \u2502w \u2375 \u2502e \u220a \u2502r \u2374 \u2502t ~ \u2502y \u2191 \u2502u \u2193 \u2502i \u2373 \u2502o \u25cb \u2502p * \u2502[ \u2190 \u2502] \u2192 \u2502\\ \u22a2 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Caps \u2502A \u2502S \u2502D \u2502F \u2502G \u2502H \u2502J \u2364 \u2502K \u2338 \u2502L \u2337 \u2502: \u2261 \u2502\" \u2262 \u2502Enter \u2502 \u2502Lock \u2502a \u237a \u2502s \u2308 \u2502d \u230a \u2502f _ \u2502g \u2207 \u2502h \u2206 \u2502j \u2218 \u2502k ' \u2502l \u2395 \u2502; \u234e \u2502' \u2355 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Shift \u2502Z \u2286 \u2502X \u2502C \u2502V \u2502B \u2502N \u2502M \u2502 < \u236a \u2502> \u2359 \u2502? \u2360 \u2502Shift \u2502 \u2502 \u2502z \u2282 \u2502x \u2283 \u2502c \u2229 \u2502v \u222a \u2502b \u22a5 \u2502n \u22a4 \u2502m | \u2502, \u235d \u2502. \u2340 \u2502/ \u233f \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Several international keyboard layouts exist with charts available from the dfns website .","title":"Typing APL Symbols"},{"location":"development-environment/typing/#microsoft-windows","text":"If you select \"Install the Dyalog APL IME for 64 bit Windows\" during installation, you will have an additional keyboard input method with the ability to type APL symbols by holding the Ctrl key. In Windows 10, you can use \u229e Win + Space to choose between available keyboard layouts.","title":"Microsoft Windows"},{"location":"development-environment/typing/#linux-including-raspberry-pi-and-macos","text":"See the APL Wiki page about Typing Glyphs on Linux .","title":"Linux (including Raspberry Pi) and macOS"},{"location":"development-environment/typing/#macos","text":"See the APL Wiki section about Typing Glyphs on macOS .","title":"macOS"},{"location":"language/","text":"Getting started with APL You do not need to install anything to get started using and learning the APL language. You can get started with the materials listed here using the TryAPL online interpreter . New to programming The book Mastering Dyalog APL by Bernard Legrand is aimed at new developers and is suitable for people with no prior programming experience. However, it is also a fairly comprehensive guide to the many aspects of both the APL language and the Dyalog development environments, and so intermediate and advanced users will still find it valuable. The book was originally published in 2009, and although it is being re-worked as an e-book to include chapters on recent features, the original is still available as a physical book . New to APL If you are already familiar with a programming language or two, the book Learning APL by Stefan Kruger offers an excellent introduction to modern APL for experienced programmers. Guided problem sets Our APL Course (work in progress) is a set of guided problem sets with examples and explained solutions. It aims to cover the majority of language constructs and is broader in scope than Learning APL , but not as comprehensive as Mastering Dyalog APL .","title":"Getting started with APL"},{"location":"language/#getting-started-with-apl","text":"You do not need to install anything to get started using and learning the APL language. You can get started with the materials listed here using the TryAPL online interpreter .","title":"Getting started with APL"},{"location":"language/#new-to-programming","text":"The book Mastering Dyalog APL by Bernard Legrand is aimed at new developers and is suitable for people with no prior programming experience. However, it is also a fairly comprehensive guide to the many aspects of both the APL language and the Dyalog development environments, and so intermediate and advanced users will still find it valuable. The book was originally published in 2009, and although it is being re-worked as an e-book to include chapters on recent features, the original is still available as a physical book .","title":"New to programming"},{"location":"language/#new-to-apl","text":"If you are already familiar with a programming language or two, the book Learning APL by Stefan Kruger offers an excellent introduction to modern APL for experienced programmers.","title":"New to APL"},{"location":"language/#guided-problem-sets","text":"Our APL Course (work in progress) is a set of guided problem sets with examples and explained solutions. It aims to cover the majority of language constructs and is broader in scope than Learning APL , but not as comprehensive as Mastering Dyalog APL .","title":"Guided problem sets"},{"location":"language/examples/","text":"Quick and dirty examples See more on the APL Wiki . Monte carlo simulation Estimate Pi with 10,000 pairs of random numbers: Try it now! { 4 \u00d7 ( + \u233f \u00f7\u2262 ) 1 > 0.5 * \u2368 + / 2 * \u2368 ? \u2375 2 \u2374 0 0 } 10000 3.1456 Regex like you've never seen Convert what you say into what your dog Rex hears: Try it now! Rex \u2190 'rex' '\\w' \u2395R '\\0' '*' \u2360 1 Rex 'Rex, I told you not to do that! Now, Rex, go and wait outside' Rex , * **** *** *** ** ** ****! ***, Rex , ** *** **** ******* Swap two substrings: Try it now! 'ab' 'ra' \u2395R 'ra' 'ab' \u22a2 'abracadabra' raabcadraab A powerful date time converter: Try it now! now \u2190 1613552859 \u235d Unix Timestamp \u235d 1200\u2336 is experimental 'Dddd Doo Mmmm YYYY hh:mm' ( 1200 \u2336 ) 20 1 \u2395DT now \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Wednesday 17 th February 2021 09 : 07 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Quick and dirty examples"},{"location":"language/examples/#quick-and-dirty-examples","text":"See more on the APL Wiki . Monte carlo simulation Estimate Pi with 10,000 pairs of random numbers: Try it now! { 4 \u00d7 ( + \u233f \u00f7\u2262 ) 1 > 0.5 * \u2368 + / 2 * \u2368 ? \u2375 2 \u2374 0 0 } 10000 3.1456 Regex like you've never seen Convert what you say into what your dog Rex hears: Try it now! Rex \u2190 'rex' '\\w' \u2395R '\\0' '*' \u2360 1 Rex 'Rex, I told you not to do that! Now, Rex, go and wait outside' Rex , * **** *** *** ** ** ****! ***, Rex , ** *** **** ******* Swap two substrings: Try it now! 'ab' 'ra' \u2395R 'ra' 'ab' \u22a2 'abracadabra' raabcadraab A powerful date time converter: Try it now! now \u2190 1613552859 \u235d Unix Timestamp \u235d 1200\u2336 is experimental 'Dddd Doo Mmmm YYYY hh:mm' ( 1200 \u2336 ) 20 1 \u2395DT now \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Wednesday 17 th February 2021 09 : 07 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Quick and dirty examples"}]}